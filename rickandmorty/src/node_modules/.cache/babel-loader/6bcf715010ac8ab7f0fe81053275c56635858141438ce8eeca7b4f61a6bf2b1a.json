{"ast":null,"code":"export const Validation = ({\n  email,\n  password\n}) => {\n  let errors = {};\n  const regexEmail = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n  const regexPassword = /<^(?=\\w*[A-Z])(?=\\w*[a-z])\\S{6,16}$/;\n  if (!regexEmail.test(email)) {\n    errors.email = 'El email es inválido';\n  }\n  if (!email) {\n    errors.email = 'El email esta vacio';\n  }\n  if (email.length > 35) {\n    errors.email = 'El email es muy largo';\n  }\n\n  // si empieza con un numero\n  // if (/^[0-9]/.test(password)){\n  if (!regexPassword.test(password)) {\n    errors.password = 'La contraseña debe tener numeros';\n  }\n  if (password.length < 6 || password.length > 10) {\n    errors.password = 'La contraseña debe tener al menos 6 y 10 caracteres';\n  }\n  return errors;\n};\n_c = Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","email","password","errors","regexEmail","regexPassword","test","length","_c","$RefreshReg$"],"sources":["C:/Users/Matías/Desktop/Proyecto Integrador/rick_and_morty/src/components/Form/Validation.js"],"sourcesContent":["export const Validation  = ({email, password}) => {\r\n    let errors = {}\r\n  \r\n    const regexEmail = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\r\n    const regexPassword = /<^(?=\\w*[A-Z])(?=\\w*[a-z])\\S{6,16}$/;\r\n  \r\n    if (!regexEmail.test(email)) {\r\n      errors.email = 'El email es inválido';\r\n    }\r\n  \r\n    if (!email){\r\n      errors.email = 'El email esta vacio';\r\n    }\r\n  \r\n    if (email.length > 35){\r\n      errors.email = 'El email es muy largo';\r\n    }\r\n  \r\n    // si empieza con un numero\r\n    // if (/^[0-9]/.test(password)){\r\n    if (!regexPassword.test(password)) {\r\n      errors.password = 'La contraseña debe tener numeros';\r\n    }\r\n  \r\n    if (password.length < 6 || password.length > 10) {\r\n      errors.password = 'La contraseña debe tener al menos 6 y 10 caracteres';\r\n    }\r\n  \r\n    return errors;\r\n  }"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIA,CAAC;EAACC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAC9C,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,MAAMC,UAAU,GAAG,kDAAkD;EACrE,MAAMC,aAAa,GAAG,qCAAqC;EAE3D,IAAI,CAACD,UAAU,CAACE,IAAI,CAACL,KAAK,CAAC,EAAE;IAC3BE,MAAM,CAACF,KAAK,GAAG,sBAAsB;EACvC;EAEA,IAAI,CAACA,KAAK,EAAC;IACTE,MAAM,CAACF,KAAK,GAAG,qBAAqB;EACtC;EAEA,IAAIA,KAAK,CAACM,MAAM,GAAG,EAAE,EAAC;IACpBJ,MAAM,CAACF,KAAK,GAAG,uBAAuB;EACxC;;EAEA;EACA;EACA,IAAI,CAACI,aAAa,CAACC,IAAI,CAACJ,QAAQ,CAAC,EAAE;IACjCC,MAAM,CAACD,QAAQ,GAAG,kCAAkC;EACtD;EAEA,IAAIA,QAAQ,CAACK,MAAM,GAAG,CAAC,IAAIL,QAAQ,CAACK,MAAM,GAAG,EAAE,EAAE;IAC/CJ,MAAM,CAACD,QAAQ,GAAG,qDAAqD;EACzE;EAEA,OAAOC,MAAM;AACf,CAAC;AAAAK,EAAA,GA7BUR,UAAU;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}